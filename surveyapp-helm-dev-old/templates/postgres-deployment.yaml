apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.deploymentName }}
  labels:
    app: {{ .Values.postgres.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgres.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.appName }}
    spec:
      containers:
        - name: {{ .Values.postgres.containerName }}
          image: "{{ .Values.image.repository }}{{ .Values.postgres.appName }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.containerPort }}
          envFrom:
            - configMapRef:
               name: {{ .Values.postgres.configmapName }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.postgres.name }}
                  key: postgres-password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
      - name: postgres-storage
        persistentVolumeClaim: 
          claimName: {{ .Values.persistentVolume.claimName }}